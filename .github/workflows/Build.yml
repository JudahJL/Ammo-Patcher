name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: Ammo_Patcher

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup C++ environment
      uses: aminya/setup-cpp@v1
      with:
        compiler: msvc
        vcvarsall: true

    - uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: latest
        actions-cache-folder: '.xmake-cache'

    - name: Extract version from xmake.lua
      id: version
      run: |
        # Extract version from xmake.lua using PowerShell
        $version = (Select-String -Path "xmake.lua" -Pattern 'set_version\("([^"]+)"\)').Matches[0].Groups[1].Value
        echo "PROJECT_VERSION=$version" >> $env:GITHUB_ENV
        echo "version=$version" >> $env:GITHUB_OUTPUT

    - name: Build releasedbg
      run: xmake build Ammo_Patcher

    - name: Create 7z archive
      run: |
        # Create Artifact directory if it doesn't exist
        mkdir -p contrib/Artifact
        
        # Create 7z archive from the Distribution folder
        7z a -t7z -mx=9 "contrib/Artifact/${{ env.PROJECT_NAME }}_${{ env.PROJECT_VERSION }}.7z" "contrib/Distribution/*"

    - name: Deploy Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: ${{ env.PROJECT_NAME }}_${{ env.PROJECT_VERSION }}
        path: ${{ github.workspace }}/contrib/Distribution/

    - name: Upload files to a GitHub release
      if: github.event_name == 'push'
      uses: ncipollo/release-action@v1.14.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ github.workspace }}/contrib/Artifact/${{ env.PROJECT_NAME }}_${{ env.PROJECT_VERSION }}.7z
        tag: ${{ env.PROJECT_VERSION }}
        commit: main
        generateReleaseNotes: true
        artifactErrorsFailBuild: true
        makeLatest: "latest"
        name: ${{ env.PROJECT_NAME }} ${{ env.PROJECT_VERSION }}
